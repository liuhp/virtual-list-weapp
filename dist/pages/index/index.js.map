{"version":3,"file":"pages/index/index.js","sources":["webpack:///./src/pages/index/index.vue?1497","webpack:///._src_pages_index_index.vue","webpack:///./src/pages/index/index.vue?2ecd","webpack:///./src/pages/index/index.vue?e724","webpack:///./src/pages/index/index.vue?5b58","webpack:///./src/pages/index/index.vue?bda3","webpack:///./src/pages/index/index.vue?550b","webpack:///._src_utils_index.ts"],"sourcesContent":["import { render } from \"./index.vue?vue&type=template&id=1badc801\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=1badc801&lang=scss\"\n\nimport exportComponent from \"/Users/liuhaiping17/Downloads/test/myAppvr/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__file',\"src/pages/index/index.vue\"]])\n/* hot reload */\nif (module.hot) {\n  __exports__.__hmrId = \"1badc801\"\n  const api = __VUE_HMR_RUNTIME__\n  module.hot.accept()\n  if (!api.createRecord('1badc801', __exports__)) {\n    console.log('reload')\n    api.reload('1badc801', __exports__)\n  }\n  \n  module.hot.accept(\"./index.vue?vue&type=template&id=1badc801\", () => {\n    console.log('re-render')\n    api.rerender('1badc801', render)\n  })\n\n}\n\n\nexport default __exports__","<template>\n  <view class=\"index\">\n    <view>\n      <img src=\"\" alt=\"\">\n    </view>\n    {{ msg }}\n    <view class=\"btn\">\n      <nut-button type=\"primary\" @click=\"handleClick('text', msg2, true)\">点我</nut-button>\n    </view>\n    <nut-toast :msg=\"msg\" v-model:visible=\"show\" :type=\"type\" :cover=\"cover\" />\n  </view>\n</template>\n\n<script>\nimport { reactive, toRefs } from 'vue';\nimport {pageJump} from '../../utils'\n\nexport default {\n  name: 'Index',\n  components: {\n    \n  },\n  setup(){\n    const state = reactive({\n      msg: '欢迎使用 NutUI3.0 开发小程序',\n      msg2: '你成功了～',\n      type: 'text',\n      show: false,\n      cover: false\n    });\n\n    const handleClick = (type, msg, cover = false) => {\n      // state.show = true;\n      // state.msg2 = msg;\n      // state.type = type;\n      // state.cover = cover;\n      pageJump('/pages/list/index')\n      \n    };\n\n    return {\n      ...toRefs(state),\n      handleClick\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.index {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n}\n</style>\n","// extracted by mini-css-extract-plugin","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"../../../node_modules/@tarojs/taro-loader/lib/raw.js!./index.vue\"\nvar config = {\"navigationBarTitleText\":\"首页\"};\n\n\nvar inst = Page(createPageConfig(component, 'pages/index/index', {root:{cn:[]}}, config || {}))\n\n","export { default } from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/dist/index.js??ref--10-0!./index.vue?vue&type=script&lang=js\"; export * from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/dist/index.js??ref--10-0!./index.vue?vue&type=script&lang=js\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../node_modules/@tarojs/mini-runner/node_modules/css-loader/dist/cjs.js??ref--1-oneOf-0-1!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/@tarojs/mini-runner/node_modules/postcss-loader/dist/cjs.js??ref--1-oneOf-0-2!../../../node_modules/@tarojs/mini-runner/node_modules/resolve-url-loader/index.js!../../../node_modules/sass-loader/dist/cjs.js??ref--1-oneOf-0-4!../../../node_modules/vue-loader/dist/index.js??ref--10-0!./index.vue?vue&type=style&index=0&id=1badc801&lang=scss\"","export * from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/dist/templateLoader.js??ref--6!../../../node_modules/vue-loader/dist/index.js??ref--10-0!./index.vue?vue&type=template&id=1badc801\"","/*\n * @Author: wujia\n * @Email: wujia8@jd.comm\n * @Date: 2021-10-25 14:32:17\n * @Description: 通用业务函数封装\n */\nimport Taro from '@tarojs/taro'\n// import envConfig from '@/env.config'\n// import envConfig from '@/env.js'\n\n\n/**\n * 获取当前页Url\n * @returns string\n */\nexport const getCurrentPageUrl = () => {\n    const pages = Taro.getCurrentPages()\n    const currentPage = pages[pages.length - 1]\n    return currentPage.route\n}\n\n/**\n * 获取当前路由参数\n * @returns\n */\nexport function getCurrentPageParams() {\n    // const router = useRouter() // import {userRouter} from 'vue-router'\n    const { router } = Taro.getCurrentInstance()\n    return {\n        ...router?.params,\n    }\n}\n\n/**\n * 页面跳转\n * @param pagePath 页面地址\n * @param options 页面参数, 顺序:params<object>, method<string>\n * example1: pageJump('/pages/index/index', 'navigateTo')\n * example2: pageJump('/pages/index/index', {a:1, b:'2'}, 'navigateTo')\n * example3: pageJump('/pages/index/index?a=1', {b:'3'}, 'navigateTo')\n */\nexport const pageJump = (pagePath, ...options) => {\n    let [params, method = 'navigateTo'] = options\n    // 参数必须使用Object传入\n    // 如果第二个参数为string，则认为是method调用\n    if (typeof params === 'string' && !!params) {\n        method = params\n        params = null\n    }\n\n    // params 序列化\n    let paramString = ''\n    if (params && Object.keys(params).length) {\n        const paramArr: string[] = []\n        let key, value\n        for ([key, value] of Object.entries(params)) {\n            paramArr.push(`${key}=${value}`)\n        }\n        paramString = paramArr.join('&')\n    }\n\n    let url = ''\n    // pagepath 中是否包含 ?\n    const query = pagePath.includes('?')\n    const [path, ...rest] = pagePath.split('?')\n    if (query && `${rest}`.length > 0) {\n        url = `${path}?${rest}&${paramString}`\n    } else {\n        url = paramString ? `${path}?${paramString}` : path\n    }\n    const isTabPagePath = ([]).includes(pagePath)\n    console.log( pagePath, isTabPagePath)\n    isTabPagePath && method !== 'reLaunch' ? Taro.switchTab({ url }) : Taro[method]({ url })\n}\n\n/**\n * 页面回跳\n * @param options\n */\nexport const pageBack = function (delta = 1) {\n    Taro.navigateBack({\n        delta,\n    })\n}\n\n// 显示toast提示\nexport const showToast = function (message, options = {}) {\n    Taro.showToast({\n        title: message,\n        icon: 'none',\n        mask: true,\n        duration: 1800,\n        ...options,\n    })\n}\n\n// 显示加载\nexport const showLoading = function (message, options = {}) {\n    Taro.showLoading({\n        title: message,\n        mask: true,\n        ...options,\n    })\n}\n\n// 关闭加载\nexport const hideLoading = function (options = {}) {\n    return Taro.hideLoading({\n        ...options,\n    })\n}\n\n// getStorage\nexport const getStorageInfo = (key = '') => {\n    if (process.env.TARO_ENV === 'h5') {\n        return window.localStorage.getItem(key)\n    }\n    return Taro.getStorageSync(key)\n}\n\n// setStorage\nexport const setStorage = (key, value) => {\n    Taro.setStorageSync(key, value)\n}\n\n// removeStorage\nexport const removeStorage = key => {\n    Taro.removeStorageSync(key)\n}\n\n// clearStorage\nexport const clearStorage = () => {\n    Taro.clearStorageSync()\n}\n\n// 文件预览\nexport const filePreview = url => {\n    Taro.downloadFile({\n        url: url + '?t=' + new Date().getTime,\n        success: function (res) {\n            const filePath = res.tempFilePath\n            Taro.openDocument({\n                filePath: filePath,\n                success: function () {\n                    console.log('打开成功')\n                },\n            })\n        },\n    })\n}\n\n/**\n * url 参数转换\n * @param url\n * @returns\n */\nexport function webParseURL(url) {\n    return url\n        .slice(url.indexOf('?') + 1)\n        .split('&')\n        .reduce((prev, curr) => {\n            const [key, val] = curr.split('=')\n            if (!val) return prev // val 为空情况\n            prev[key] = val\n            return prev\n        }, {})\n}\n\n/**\n * 数字转换\n * @param num\n * @returns\n */\nexport const toThousands = num => {\n    const content: string = (num || 0).toString()\n    let full = ''\n    let decimals = ''\n    let result = ''\n    full = content.split('.')[0] || ''\n    decimals = content.split('.')[1] || ''\n    while (full.length > 3) {\n        result = ',' + full.slice(-3) + result\n        full = full.slice(0, full.length - 3)\n    }\n    result = full + result\n    if (decimals) {\n        result = result + '.' + decimals\n    }\n    return result\n}\n\n/**\n * 上传图片\n * @param url String http开头，上传至服务度端地址\n * @returns Promise\n */\n// wx.uploadFile\n// export const upload = (\n//     url,\n//     params = {},\n//     file,\n//     name = 'imgContent'\n//     // returnType = 'navigate',\n//     // returnUrl\n// ) => {\n//     return new Promise((resolve, reject) => {\n//         url = envConfig.baseUrl + url\n//         Taro.uploadFile({\n//             url,\n//             filePath: file,\n//             name,\n//             formData: params,\n//             header: Object.assign({\n//                 'content-type': 'multipart/form-data',\n//             }),\n\n//             success(res) {\n//                 console.log('upload', res)\n//                 try {\n//                     const { code, msg, data } = JSON.parse(res.data)\n//                     if (code === '200') {\n//                         // 成功\n//                         resolve(data)\n//                     } else {\n//                         showToast(msg || '')\n//                         reject(msg)\n//                     }\n//                 } catch (error) {\n//                     console.log('upload error:', error)\n//                 }\n               \n//             },\n//             fail() {\n//                 showToast('网络异常，请稍后再试')\n//                 reject('网络异常，请稍后再试')\n//             },\n//         })\n//     })\n// }\n\n/**\n * 选择图片\n * @param count Number 允许选择图片数量\n * @returns result: Object\n */\n// wx.chooseImage(Object object)\nexport const chooseImage = async count => {\n    let result = {}\n\n    await Taro.chooseImage({\n        count,\n        sizeType: ['original', 'compressed'], // 可以指定是原图还是压缩图，默认二者都有\n        sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有，在H5浏览器端支持使用 `user` 和 `environment`分别指定为前后摄像头\n        success(res) {\n            result = res\n        },\n        fail(error) {\n            console.log('选择图片error', error)\n        },\n    })\n    return result\n}\n\n// 时间格式化\nexport const formatTime = (date, _format) => {\n    if (!date) {\n        return null\n    }\n    if (typeof date === 'string' && date.indexOf('T') === -1) {\n        date = date.replace(/-/g, '/')\n    }\n    const t = new Date(date)\n    const format = _format || 'yyyy-MM-dd HH:dd:ss'\n    const tf = function (i) {\n        return (i < 10 ? '0' : '') + i\n    }\n    return format.replace(/yyyy|MM|dd|HH|mm|ss/g, function (a) {\n        switch (a) {\n        case 'yyyy':\n            return tf(t.getFullYear())\n        case 'MM':\n            return tf(t.getMonth() + 1)\n        case 'mm':\n            return tf(t.getMinutes())\n        case 'dd':\n            return tf(t.getDate())\n        case 'HH':\n            return tf(t.getHours())\n        case 'ss':\n            return tf(t.getSeconds())\n        default:\n            break\n        }\n    })\n}\n\n\n/**\n * 根据sign转换obj，拼接为字符串(xx=xxx${sign}yy=yyy)\n * @param obj\n * @param sign\n * @returns\n */\nexport const convertString = (obj = {}, sign = ';') => {\n    let str = ''\n    for (const key in obj) {\n        // if (obj[key]) {\n        str = str + key + '=' + obj[key] + sign\n        // }\n    }\n    // 去掉尾部sign\n    str = str.slice(0, str.length - 1)\n    return str\n}\n\n/**\n * 检测是否登录\n * @returns\n */\nexport const checkLogin = () => {\n    return getStorageInfo('token') ? true : false\n}\n\n/**\n * 验证手机号\n * @param phoneNumber\n * @returns\n */\nexport const validatePhone = phoneNumber => {\n    if (!/^1[3-9](\\d){9}$/.test(phoneNumber)) {\n        return false\n    }\n    return true\n}\n// 身份证正则\nexport const certNoValidator = (val: string) => {\n    return /^((\\d{15})|(\\d{18})|(\\d{17}[xX]))$/.test(String(val))\n}\n// 手机号正则\nexport const phoneValidator = (val: string) => {\n    console.log('/^1[3-9]d{9}$/.test(String(val))')\n    return /^1[3-9]\\d{9}$/.test(String(val))\n}\n// 校验姓名：只能输入中英文\nexport const nameValidator = (val: string) => {\n    const reg = /^[\\u4e00-\\u9fa5a-zA-Z]+$/\n    return reg.test(val)\n}\n// 校验地址：不能全为数字或字母\nexport const addressValidator = (val: string) => {\n    const str = val.replace(/(^\\s*)|(\\s*$)/g, '')\n    const len = str.length\n    const regNumber = new RegExp(`^\\\\d{${len}}$`, 'g')\n    const regEnglish = new RegExp(`^[a-zA-Z]{${len}}$`, 'g')\n    const res = !(regNumber.test(str) || regEnglish.test(str))\n    return res\n}\nexport const nameLengthValidator = (val: string) => {\n    const str = val.replace(/(^\\s*)|(\\s*$)/g, '')\n    if (str) {\n        return str.length >= 2\n    }\n    return false\n}\n// 详细地址限制最小字符\nexport const realAddressLengthValidator = (val: string) => {\n    const str = val.replace(/(^\\s*)|(\\s*$)/g, '')\n    if (str) {\n        return str.length >= 2\n    }\n    return false\n}\n\n/**\n * 长度校验\n * @param val String 被校验的值\n * @param min Number 最小长度\n * @param val Number 最大长度\n * @returns Boolean\n */\nexport const lengthValidator = (val: string, min: number, max: number) => {\n    console.log('val:String, min, max', val, min, max)\n    if (val && min >= 0 && max > min) {\n        return val.length > min && val.length < max\n    }\n    return false\n}\n\n\n// 设置页面title\nexport const setNavigationBarTitle = title => {\n    wx.setNavigationBarTitle({\n        title,\n    })\n}\n\n// 判断url是否为有效：https、http\nexport const maskInfo = cardMaskNo => {\n    if (cardMaskNo.length >= 16) {\n        const indexOf = cardMaskNo.length - 4\n        let last = ''\n        switch (indexOf % 4) {\n        case 3:\n            last = '*** '\n            break\n        case 2:\n            last = '** '\n            break\n        case 1:\n            last = '* '\n            break\n        }\n        return '**** **** **** ' + last + cardMaskNo.substring(indexOf)\n    }\n    return cardMaskNo\n}\n\nexport const dealUrl = (baseUrl, url) => {\n    const isHttpUrl = url.startsWith('https://') || url.startsWith('http://') || url.startsWith('//')\n    const hasPreFix = url.startsWith('/')\n    return isHttpUrl ? url : hasPreFix ? `${baseUrl}${url}` : `${baseUrl}/${url}`\n}\n\n\n/**\n * 微信接口封装位promise，例入：await wxPromise(wx.login)() || wxPromise(wx.login)().then().catch()\n * @param fn\n * @returns promise\n */\nexport const wxPromise = fn => {\n    return function (options: WxApiOptions = {}) {\n        return new Promise((resolve, reject) => {\n            options.success = function (res) {\n                resolve(res)\n            }\n            options.fail = function (err) {\n                reject(err)\n            }\n            fn(options)\n        })\n    }\n}\n\n// 打电话\nexport const makePhoneCall = phoneNumber => {\n    Taro.makePhoneCall({\n        phoneNumber, //仅为示例，并非真实的电话号码\n    })\n}\n\n// 查看已签署协议\n\n/* 获取系统信息异步版本 */\nexport const getSystemInfo = () => {\n    return new Promise((resolve, reject) => {\n        Taro.getSystemInfo({\n            success: res => {\n                resolve(res)\n            },\n            fail: err => {\n                reject(err)\n            },\n        })\n    })\n}\n\n/* 获取系统信息同步版本 */\nexport const getSystemInfoSync = () => {\n    return Taro.getSystemInfoSync()\n}\n\nexport const getParameterByName = (name, url) => {\n    if (!url) return ''\n    const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)')\n    const results = regex.exec(url)\n    if (!results) return null\n    if (!results[2]) return ''\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '))\n}\n\nexport const handleCopy = content => {\n    Taro.setClipboardData({\n        data: content,\n        success: function (res) {\n            console.log(res)\n        },\n    })\n}\n\n/**\n * 版本自动更新\n */\nexport const checkUpdate = () => {\n    if (Taro.canIUse('getUpdateManager')) {\n        const updateManager = Taro.getUpdateManager()\n        updateManager.onCheckForUpdate(res => {\n            // console.log('是否有新版本', res)\n            if (res.hasUpdate) {\n                updateManager.onUpdateReady(() => {\n                    Taro.showModal({\n                        title: '更新提示',\n                        content: '新版本已经准备好，是否重启应用？',\n                        success: res => {\n                            if (res.confirm) {\n                                updateManager.applyUpdate()\n                            }\n                        },\n                    })\n                })\n                updateManager.onUpdateFailed(() => {\n                    Taro.showModal({\n                        title: '已经有新版本了哟~',\n                        content: '新版本已经上线啦~，请您删除当前小程序，重新搜索打开哟~',\n                    })\n                })\n            }\n        })\n    } else {\n        Taro.showModal({\n            title: '提示',\n            content: '当前微信版本过低，无法使用该功能，请升级到最新微信版本后重试。',\n        })\n    }\n}\n\n/**\n * 获取图片信息 & 保存图片到系统相册\n */\nconst saveImgToPhotosAlbum = (url: string): void => {\n    Taro.getImageInfo({\n        src: url,\n        success: res => {\n            const path = res.path\n            Taro.saveImageToPhotosAlbum({\n                filePath: path,\n                success: res => {\n                    console.log(res)\n                    showToast('图片保存成功')\n                },\n                fail: res => {\n                    console.log(res)\n                    showToast('图片保存失败')\n                },\n            })\n        },\n        fail: res => {\n            console.log(res)\n        },\n    })\n}\n\n/**\n * 获取用户得当前设置 & 提前向用户发起授权请求\n * @param scopeName 需要授权的项名称\n */\nexport const getAuthorize = (scopeName: string, url: string): void => {\n    console.log('入参scopeName', scopeName)\n    Taro.getSetting({\n        success: res => {\n            if (!res.authSetting[`scope.${scopeName}`]) {\n                Taro.authorize({\n                    scope: `scope.${scopeName}`,\n                    success: () => {\n                        // 同意授权\n                        saveImgToPhotosAlbum(url)\n                    },\n                    fail: err => {\n                        /**\n                         * 拉起弹窗（非首次授权情况下）\n                         *\n                         * 弹窗拒绝授权（首次）\n                         *      errMsg: \"authorize:fail auth deny\"\n                         * 之前拒绝过\n                         *      errMsg: \"authorize:fail 系统错误，错误码：-12006,auth deny\"\n                         */\n                        console.log('弹窗，打开设置', err)\n                        // const { errMsg = '' } = err\n                        // if (errMsg !== 'authorize:fail auth deny') {\n                        Taro.showModal({\n                            title: '是否前往打开相册权限',\n                            content: '点击确定可前往打开相册权限',\n                            success: res => {\n                                if (res.confirm) {\n                                    // console.log('用户点击确定')\n                                    Taro.openSetting({\n                                        success(res) {\n                                            console.log(res.authSetting)\n                                        },\n                                    })\n                                } else if (res.cancel) {\n                                    // console.log('用户点击取消')\n                                }\n                            },\n                        })\n                        // }\n                    },\n                })\n            } else {\n                // 已经授权了\n                console.log('已经授权了')\n                saveImgToPhotosAlbum(url)\n            }\n        },\n        fail: error => {\n            console.log('获取当前授权信息报错', error)\n        },\n    })\n}\n// 查看已签署协议\n//下载pdf并查看，已签署的协议\n// export const viewPdf = item => {\n//     showLoading('加载中...')\n//     const { id = '', agreementName = '合同' } = item\n//     console.log('点击合同,合同ID=', id)\n//     if (!id) {\n//         showToast('合同生成中，请稍后查看')\n//         return\n//     }\n//     const token = getStorageInfo('token') || ''\n//     const url = `${envConfig.baseUrl}${getSignProtocol}?contractId=${id}&token=${token}`\n//     const filePath = `${wx.env.USER_DATA_PATH}/${agreementName}.pdf`\n//     Taro.downloadFile({\n//         url,\n//         filePath,\n//         success: res => {\n//             const filePath = res.filePath\n//             Taro.openDocument({\n//                 filePath,\n//                 fileType: 'pdf',\n//                 success: res => {\n//                     console.log('打开文档成功', res)\n//                     hideLoading()\n//                 },\n//                 fail: error => {\n//                     showToast('打开文档失败')\n//                     console.log('打开文档失败:', error)\n//                     hideLoading()\n//                 },\n//             })\n//         },\n//         fail: error => {\n//             showToast('下载文档出错')\n//             console.log('下载文档error', error)\n//             hideLoading()\n//         },\n//     })\n// }\n\n// 数组去重\nexport const uniqueArr = <T> (arr: T[]) => {\n    const newArr: T[] = []\n    for (let i = 0; i < arr.length; i++) {\n        if (newArr.indexOf(arr[i]) === -1) {\n            newArr.push(arr[i])\n        }\n    }\n    return newArr\n}\n\n// 返回一个 SelectorQuery 对象实例\nexport const createSelectorQuery = () => {\n    return Taro.createSelectorQuery()\n}\n\n// 判断字符串是否为JSON格式\nexport const isJSONStr = str => {\n    if (typeof str === 'string') {\n        try {\n            const obj = JSON.parse(str)\n            if (typeof obj === 'object' && obj) {\n                return true\n            } else {\n                return false\n            }\n        } catch (e) {\n            console.log('error：' + str + '!!!' + e)\n            return false\n        }\n    }\n    console.log('It is not a string!')\n}\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAcA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACZA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAFA;AAIA;AA3BA;;;;;;;;;;;;;;;;;;AAhBA;;;AACA;AACA;AAAA;AAAA;;AADA;AACA;;AAGA;;;AACA;AACA;;;;;;AAPA;AAKA;AAIA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAAA;AAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;;;;;;;;;;ACTA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AAEA;AAAA;AACA;AAGA;AACA;AAEA;AAAA;AACA;AAAA,eAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAVA;AAYA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAJA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAiBA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAdA;AAglBA;AAoBA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AAdA;AAiBA;AAnCA;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhDA;AAkDA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;A","sourceRoot":""}